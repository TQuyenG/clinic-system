import React, { useState, useMemo } from 'react';
import { FaUser, FaClock, FaComment, FaSearch, FaFilter, FaTrophy, FaTag, FaUsers, FaFire, FaStar, FaHeart, FaMedal, FaThumbsUp, FaSortAmountDown, FaSortAmountUp } from 'react-icons/fa';
import './HealthForumPage.css';

const HealthForumPage = () => {
  const [newPost, setNewPost] = useState({ title: '', content: '', tags: [], group: '' });
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedGroup, setSelectedGroup] = useState('all');
  const [selectedTags, setSelectedTags] = useState([]);
  const [sortBy, setSortBy] = useState('newest');
  const [showFilters, setShowFilters] = useState(false);

  const groups = [
    { id: 'all', name: 'T·∫•t c·∫£', icon: 'üè•', color: '#4CAF50' },
    { id: 'cardio', name: 'Tim m·∫°ch', icon: '‚ù§Ô∏è', color: '#E91E63' },
    { id: 'diabetes', name: 'Ti·ªÉu ƒë∆∞·ªùng', icon: 'ü©∫', color: '#FF9800' },
    { id: 'nutrition', name: 'Dinh d∆∞·ª°ng', icon: 'ü•ó', color: '#8BC34A' },
    { id: 'mental', name: 'S·ª©c kh·ªèe tinh th·∫ßn', icon: 'üß†', color: '#9C27B0' },
    { id: 'fitness', name: 'Th·ªÉ d·ª•c', icon: 'üí™', color: '#2196F3' }
  ];

  const popularTags = [
    'T·∫≠p luy·ªán', 'Dinh d∆∞·ª°ng', 'Thu·ªëc men', 'B·ªánh l√Ω', 
    'T∆∞ v·∫•n', 'Kinh nghi·ªám', 'Ph√≤ng ng·ª´a', 'ƒêi·ªÅu tr·ªã'
  ];

  const samplePosts = [
    {
      id: 1,
      title: 'C√°ch duy tr√¨ s·ª©c kh·ªèe tim m·∫°ch hi·ªáu qu·∫£',
      author: 'Nguy·ªÖn VƒÉn A',
      authorAvatar: 'üë®‚Äç‚öïÔ∏è',
      date: '2025-10-10',
      content: 'T√¥i mu·ªën h·ªèi v·ªÅ c√°c c√°ch t·∫≠p luy·ªán ƒë·ªÉ gi·ªØ s·ª©c kh·ªèe tim m·∫°ch. C√≥ b√†i t·∫≠p n√†o ph√π h·ª£p cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu kh√¥ng? M·ªçi ng∆∞·ªùi c√≥ th·ªÉ chia s·∫ª kinh nghi·ªám c·ªßa m√¨nh.',
      comments: 15,
      likes: 42,
      views: 234,
      group: 'cardio',
      tags: ['T·∫≠p luy·ªán', 'T∆∞ v·∫•n', 'Ph√≤ng ng·ª´a'],
      trending: true
    },
    {
      id: 2,
      title: 'Ch·∫ø ƒë·ªô ƒÉn u·ªëng cho ng∆∞·ªùi b·ªã ti·ªÉu ƒë∆∞·ªùng type 2',
      author: 'Tr·∫ßn Th·ªã B',
      authorAvatar: 'üë©‚Äç‚öïÔ∏è',
      date: '2025-10-09',
      content: 'M·ªçi ng∆∞·ªùi c√≥ th·ªÉ chia s·∫ª th·ª±c ƒë∆°n ƒÉn u·ªëng h√†ng ng√†y cho ng∆∞·ªùi b·ªã ti·ªÉu ƒë∆∞·ªùng type 2 kh√¥ng? T√¥i ƒëang g·∫∑p kh√≥ khƒÉn trong vi·ªác l·∫≠p k·∫ø ho·∫°ch b·ªØa ƒÉn.',
      comments: 23,
      likes: 67,
      views: 456,
      group: 'diabetes',
      tags: ['Dinh d∆∞·ª°ng', 'B·ªánh l√Ω', 'T∆∞ v·∫•n']
    },
    {
      id: 3,
      title: 'C√°c b√†i t·∫≠p yoga cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu',
      author: 'L√™ VƒÉn C',
      authorAvatar: 'üßò',
      date: '2025-10-08',
      content: 'T√¥i mu·ªën b·∫Øt ƒë·∫ßu t·∫≠p yoga ƒë·ªÉ c·∫£i thi·ªán s·ª©c kh·ªèe. Ai c√≥ th·ªÉ g·ª£i √Ω c√°c b√†i t·∫≠p ƒë∆°n gi·∫£n cho ng∆∞·ªùi m·ªõi kh√¥ng?',
      comments: 8,
      likes: 34,
      views: 189,
      group: 'fitness',
      tags: ['T·∫≠p luy·ªán', 'Kinh nghi·ªám']
    },
    {
      id: 4,
      title: 'L√†m th·∫ø n√†o ƒë·ªÉ gi·∫£m cƒÉng th·∫≥ng trong c√¥ng vi·ªác?',
      author: 'Ph·∫°m Th·ªã D',
      authorAvatar: 'üë©‚Äçüíº',
      date: '2025-10-07',
      content: 'C√¥ng vi·ªác g·∫ßn ƒë√¢y r·∫•t cƒÉng th·∫≥ng, m·ªçi ng∆∞·ªùi c√≥ ph∆∞∆°ng ph√°p n√†o ƒë·ªÉ gi·∫£m stress hi·ªáu qu·∫£ kh√¥ng?',
      comments: 31,
      likes: 89,
      views: 678,
      group: 'mental',
      tags: ['T∆∞ v·∫•n', 'Kinh nghi·ªám'],
      trending: true
    },
    {
      id: 5,
      title: 'Th·ª±c ƒë∆°n Eat Clean cho ng∆∞·ªùi b·∫≠n r·ªôn',
      author: 'Ho√†ng VƒÉn E',
      authorAvatar: 'üë®‚Äçüç≥',
      date: '2025-10-06',
      content: 'Chia s·∫ª th·ª±c ƒë∆°n ƒÉn s·∫°ch ƒë∆°n gi·∫£n, d·ªÖ l√†m cho ng∆∞·ªùi ƒëi l√†m. C√≥ th·ªÉ chu·∫©n b·ªã tr∆∞·ªõc ƒë∆∞·ª£c kh√¥ng?',
      comments: 19,
      likes: 56,
      views: 345,
      group: 'nutrition',
      tags: ['Dinh d∆∞·ª°ng', 'Kinh nghi·ªám']
    }
  ];

  const topContributors = [
    { name: 'Dr. Minh', avatar: 'üë®‚Äç‚öïÔ∏è', points: 2450, posts: 89, badge: 'gold' },
    { name: 'Hoa Nguy·ªÖn', avatar: 'üë©‚Äç‚öïÔ∏è', points: 2103, posts: 76, badge: 'gold' },
    { name: 'PT. An', avatar: 'üí™', points: 1876, posts: 64, badge: 'silver' },
    { name: 'Dinh d∆∞·ª°ng vi√™n Thu', avatar: 'ü•ó', points: 1654, posts: 58, badge: 'silver' },
    { name: 'T√¢m l√Ω vi√™n Lan', avatar: 'üß†', points: 1432, posts: 52, badge: 'bronze' }
  ];

  const filteredPosts = useMemo(() => {
    let filtered = [...samplePosts];

    if (searchTerm) {
      filtered = filtered.filter(post =>
        post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        post.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
        post.author.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    if (selectedGroup !== 'all') {
      filtered = filtered.filter(post => post.group === selectedGroup);
    }

    if (selectedTags.length > 0) {
      filtered = filtered.filter(post =>
        selectedTags.some(tag => post.tags.includes(tag))
      );
    }

    switch (sortBy) {
      case 'newest':
        filtered.sort((a, b) => new Date(b.date) - new Date(a.date));
        break;
      case 'oldest':
        filtered.sort((a, b) => new Date(a.date) - new Date(b.date));
        break;
      case 'popular':
        filtered.sort((a, b) => b.likes - a.likes);
        break;
      case 'commented':
        filtered.sort((a, b) => b.comments - a.comments);
        break;
      default:
        break;
    }

    return filtered;
  }, [searchTerm, selectedGroup, selectedTags, sortBy, samplePosts]);

  const handleSubmitPost = () => {
    if (newPost.title && newPost.content) {
      alert('Ch·ª©c nƒÉng g·ª≠i b√†i ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn!');
      setNewPost({ title: '', content: '', tags: [], group: '' });
    }
  };

  const toggleTag = (tag) => {
    if (selectedTags.includes(tag)) {
      setSelectedTags(selectedTags.filter(t => t !== tag));
    } else {
      setSelectedTags([...selectedTags, tag]);
    }
  };

  const getBadgeIcon = (badge) => {
    switch (badge) {
      case 'gold': return <FaTrophy className="health-forum-badge-icon health-forum-gold" />;
      case 'silver': return <FaMedal className="health-forum-badge-icon health-forum-silver" />;
      case 'bronze': return <FaMedal className="health-forum-badge-icon health-forum-bronze" />;
      default: return null;
    }
  };

  return (
    <div className="health-forum-container">
      <div className="health-forum-header">
        <div className="health-forum-header-content">
          <h1 className="health-forum-title">üè• Di·ªÖn ƒë√†n S·ª©c kh·ªèe</h1>
          <p className="health-forum-subtitle">C·ªông ƒë·ªìng chia s·∫ª ki·∫øn th·ª©c v√† kinh nghi·ªám v·ªÅ s·ª©c kh·ªèe</p>
        </div>
      </div>

      <div className="health-forum-search-section">
        <div className="health-forum-search-bar">
          <FaSearch className="health-forum-search-icon" />
          <input
            type="text"
            className="health-forum-search-input"
            placeholder="T√¨m ki·∫øm b√†i vi·∫øt, t√°c gi·∫£, ch·ªß ƒë·ªÅ..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
        </div>
        <button 
          className="health-forum-filter-toggle"
          onClick={() => setShowFilters(!showFilters)}
        >
          <FaFilter /> B·ªô l·ªçc {showFilters ? '‚ñ≤' : '‚ñº'}
        </button>
      </div>

      {showFilters && (
        <div className="health-forum-filters">
          <div className="health-forum-filter-section">
            <h3 className="health-forum-filter-title">S·∫Øp x·∫øp theo</h3>
            <div className="health-forum-sort-buttons">
              <button
                className={`health-forum-sort-btn ${sortBy === 'newest' ? 'active' : ''}`}
                onClick={() => setSortBy('newest')}
              >
                <FaSortAmountDown /> M·ªõi nh·∫•t
              </button>
              <button
                className={`health-forum-sort-btn ${sortBy === 'oldest' ? 'active' : ''}`}
                onClick={() => setSortBy('oldest')}
              >
                <FaSortAmountUp /> C≈© nh·∫•t
              </button>
              <button
                className={`health-forum-sort-btn ${sortBy === 'popular' ? 'active' : ''}`}
                onClick={() => setSortBy('popular')}
              >
                <FaFire /> Ph·ªï bi·∫øn
              </button>
              <button
                className={`health-forum-sort-btn ${sortBy === 'commented' ? 'active' : ''}`}
                onClick={() => setSortBy('commented')}
              >
                <FaComment /> Nhi·ªÅu b√¨nh lu·∫≠n
              </button>
            </div>
          </div>

          <div className="health-forum-filter-section">
            <h3 className="health-forum-filter-title">Tags ph·ªï bi·∫øn</h3>
            <div className="health-forum-tags-filter">
              {popularTags.map(tag => (
                <button
                  key={tag}
                  className={`health-forum-tag-btn ${selectedTags.includes(tag) ? 'active' : ''}`}
                  onClick={() => toggleTag(tag)}
                >
                  <FaTag /> {tag}
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      <div className="health-forum-main-layout">
        <aside className="health-forum-sidebar health-forum-sidebar-left">
          <div className="health-forum-widget">
            <h3 className="health-forum-widget-title">
              <FaUsers /> Nh√≥m ch·ªß ƒë·ªÅ
            </h3>
            <div className="health-forum-groups">
              {groups.map(group => (
                <button
                  key={group.id}
                  className={`health-forum-group-btn ${selectedGroup === group.id ? 'active' : ''}`}
                  onClick={() => setSelectedGroup(group.id)}
                  style={{ '--group-color': group.color }}
                >
                  <span className="health-forum-group-icon">{group.icon}</span>
                  <span className="health-forum-group-name">{group.name}</span>
                </button>
              ))}
            </div>
          </div>

          <div className="health-forum-widget health-forum-new-post-widget">
            <h3 className="health-forum-widget-title">‚úçÔ∏è T·∫°o b√†i m·ªõi</h3>
            <div className="health-forum-post-form">
              <input
                type="text"
                className="health-forum-form-input"
                placeholder="Ti√™u ƒë·ªÅ b√†i vi·∫øt..."
                value={newPost.title}
                onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}
              />
              <textarea
                className="health-forum-form-textarea"
                placeholder="N·ªôi dung b√†i vi·∫øt..."
                value={newPost.content}
                onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}
              />
              <button onClick={handleSubmitPost} className="health-forum-submit-btn">
                ƒêƒÉng b√†i
              </button>
            </div>
          </div>
        </aside>

        <main className="health-forum-main-content">
          <div className="health-forum-posts-header">
            <h2 className="health-forum-posts-title">
              {selectedGroup === 'all' ? 'üìù T·∫•t c·∫£ b√†i vi·∫øt' : `üìù ${groups.find(g => g.id === selectedGroup)?.name}`}
            </h2>
            <span className="health-forum-posts-count">{filteredPosts.length} b√†i vi·∫øt</span>
          </div>

          <div className="health-forum-posts">
            {filteredPosts.map((post) => (
              <article key={post.id} className="health-forum-post-card">
                {post.trending && (
                  <div className="health-forum-trending-badge">
                    <FaFire /> Trending
                  </div>
                )}
                
                <div className="health-forum-post-header">
                  <div className="health-forum-post-author">
                    <span className="health-forum-author-avatar">{post.authorAvatar}</span>
                    <div className="health-forum-author-info">
                      <span className="health-forum-author-name">{post.author}</span>
                      <span className="health-forum-post-date">
                        <FaClock /> {post.date}
                      </span>
                    </div>
                  </div>
                  <span 
                    className="health-forum-post-group-badge"
                    style={{ backgroundColor: groups.find(g => g.id === post.group)?.color }}
                  >
                    {groups.find(g => g.id === post.group)?.icon} {groups.find(g => g.id === post.group)?.name}
                  </span>
                </div>

                <h3 className="health-forum-post-title">{post.title}</h3>
                <p className="health-forum-post-content">{post.content}</p>

                <div className="health-forum-post-tags">
                  {post.tags.map(tag => (
                    <span key={tag} className="health-forum-post-tag">
                      <FaTag /> {tag}
                    </span>
                  ))}
                </div>

                <div className="health-forum-post-footer">
                  <div className="health-forum-post-stats">
                    <button className="health-forum-stat-btn">
                      <FaHeart /> {post.likes}
                    </button>
                    <button className="health-forum-stat-btn">
                      <FaComment /> {post.comments}
                    </button>
                    <span className="health-forum-stat-views">
                      üëÅÔ∏è {post.views} l∆∞·ª£t xem
                    </span>
                  </div>
                  <button className="health-forum-view-btn">
                    Xem chi ti·∫øt ‚Üí
                  </button>
                </div>
              </article>
            ))}

            {filteredPosts.length === 0 && (
              <div className="health-forum-empty-state">
                <p>üîç Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o ph√π h·ª£p</p>
              </div>
            )}
          </div>
        </main>

        <aside className="health-forum-sidebar health-forum-sidebar-right">
          <div className="health-forum-widget">
            <h3 className="health-forum-widget-title">
              <FaTrophy /> B·∫£ng x·∫øp h·∫°ng
            </h3>
            <div className="health-forum-leaderboard">
              {topContributors.map((contributor, index) => (
                <div key={index} className="health-forum-contributor-card">
                  <div className="health-forum-contributor-rank">
                    {index === 0 && <span className="health-forum-rank-badge gold">ü•á</span>}
                    {index === 1 && <span className="health-forum-rank-badge silver">ü•à</span>}
                    {index === 2 && <span className="health-forum-rank-badge bronze">ü•â</span>}
                    {index > 2 && <span className="health-forum-rank-number">#{index + 1}</span>}
                  </div>
                  <span className="health-forum-contributor-avatar">{contributor.avatar}</span>
                  <div className="health-forum-contributor-info">
                    <div className="health-forum-contributor-name">
                      {contributor.name}
                      {getBadgeIcon(contributor.badge)}
                    </div>
                    <div className="health-forum-contributor-stats">
                      <span><FaStar /> {contributor.points} ƒëi·ªÉm</span>
                      <span>üìù {contributor.posts} b√†i</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="health-forum-widget">
            <h3 className="health-forum-widget-title">
              üî• Th·ªëng k√™
            </h3>
            <div className="health-forum-stats">
              <div className="health-forum-stat-item">
                <span className="health-forum-stat-number">1,234</span>
                <span className="health-forum-stat-label">Th√†nh vi√™n</span>
              </div>
              <div className="health-forum-stat-item">
                <span className="health-forum-stat-number">567</span>
                <span className="health-forum-stat-label">B√†i vi·∫øt</span>
              </div>
              <div className="health-forum-stat-item">
                <span className="health-forum-stat-number">3,456</span>
                <span className="health-forum-stat-label">B√¨nh lu·∫≠n</span>
              </div>
            </div>
          </div>
        </aside>
      </div>
    </div>
  );
};

export default HealthForumPage;